const { ethers } = require('ethers');

// Anvil network configuration
const ANVIL_RPC_URL = 'http://127.0.0.1:8546';
const ACCOUNT_ADDRESS = '0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266'; // Anvil default first account

async function checkBalance() {
    try {
        console.log('üîç Connecting to Anvil network...');
        const provider = new ethers.JsonRpcProvider(ANVIL_RPC_URL);
        
        // Ê£ÄÊü•ÁΩëÁªúËøûÊé•
        const network = await provider.getNetwork();
        console.log(`üì° Network connection successful: Chain ID ${network.chainId}`);
        
        // Êü•ËØ¢Ë¥¶Êà∑‰ΩôÈ¢ù
        console.log(`\nüí∞ Querying account balance: ${ACCOUNT_ADDRESS}`);
        const balance = await provider.getBalance(ACCOUNT_ADDRESS);
        const balanceInEth = ethers.formatEther(balance);
        
        console.log(`\nüìä Balance information:`);
        console.log(`   - Wei: ${balance.toString()}`);
        console.log(`   - ETH: ${balanceInEth}`);
        
        // Query transaction count (nonce)
        const nonce = await provider.getTransactionCount(ACCOUNT_ADDRESS);
        console.log(`   - Transaction count (nonce): ${nonce}`);
        
        // Ëé∑ÂèñÊúÄÊñ∞Âå∫Âùó‰ø°ÊÅØ
        const blockNumber = await provider.getBlockNumber();
        console.log(`\nüîó Blockchain information:`);
        console.log(`   - Latest block number: ${blockNumber}`);
        
        if (blockNumber > 0) {
            const latestBlock = await provider.getBlock(blockNumber);
            console.log(`   - Latest block time: ${new Date(latestBlock.timestamp * 1000).toLocaleString()}`);
            console.log(`   - Block transaction count: ${latestBlock.transactions.length}`);
        }
        
        // Check if in initial state
        if (balanceInEth === '10000.0' && nonce === 0) {
            console.log(`\n‚ö†Ô∏è  Warning: Account balance is at initial value 10000 ETH and nonce is 0, state data may not be loaded correctly`);
        } else {
            console.log(`\n‚úÖ Account state has been modified, indicating state data loaded normally`);
        }
        
    } catch (error) {
        console.error('‚ùå Query failed:', error.message);
        if (error.code === 'NETWORK_ERROR') {
            console.log('üí° Please ensure Anvil network is running at http://127.0.0.1:8546');
        }
    }
}

// ËøêË°åÊü•ËØ¢
checkBalance();